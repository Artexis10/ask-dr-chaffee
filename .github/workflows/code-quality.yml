name: Code Quality

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**.py'
      - '.github/workflows/code-quality.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**.py'

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install black ruff
      
      - name: Check code formatting with Black
        run: |
          black --check --diff backend/scripts/ tests/unit/
      
      - name: Lint with Ruff
        run: |
          ruff check backend/scripts/ tests/unit/ --output-format=github
      
      - name: Check for common issues
        run: |
          # Check for print statements in production code (except logging)
          ! grep -r "print(" backend/scripts/ --include="*.py" | grep -v "# DEBUG" | grep -v "logger"
          
          # Check for TODO/FIXME comments
          echo "## TODOs and FIXMEs" >> $GITHUB_STEP_SUMMARY
          grep -rn "TODO\|FIXME" backend/scripts/ --include="*.py" >> $GITHUB_STEP_SUMMARY || echo "None found" >> $GITHUB_STEP_SUMMARY
  
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety
      
      - name: Run Bandit security scan
        run: |
          bandit -r backend/scripts/ -f json -o bandit-report.json || true
          bandit -r backend/scripts/ -f screen
      
      - name: Check for known vulnerabilities
        run: |
          pip install -r backend/requirements.txt
          safety check --json || true
      
      - name: Detect secrets
        run: |
          python .pre-commit-hooks/detect-secrets.py backend/scripts/ tests/
  
  type-check:
    name: Type Checking
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install mypy
        run: |
          python -m pip install --upgrade pip
          pip install mypy types-requests
          pip install isodate python-dotenv tqdm
      
      - name: Run mypy (informational)
        continue-on-error: true
        run: |
          mypy backend/scripts/ingest_youtube_enhanced.py --ignore-missing-imports --no-strict-optional
